name: Deploy Spring Boot App via Docker Image

on:
  push:
    branches: [dev]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📦 코드 체크아웃
        uses: actions/checkout@v3

      - name: ☕ Java 17 설정
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🔑 gradlew 실행 권한 부여
        run: chmod +x ./gradlew

      - name: 🛠 Gradle 빌드
        run: ./gradlew clean build

      - name: 🐳 Docker 이미지 빌드
        run: docker build -t springboot-app .

      - name: 📦 Docker 이미지를 .tar로 저장
        run: docker save -o springboot-app.tar springboot-app

      - name: 📄 .env 파일 생성
        run: |
          echo "SPRING_PROFILES_ACTIVE=prod" > .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "DB_URL=${{ secrets.DB_URL }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "GITHUB_CLIENT_ID=${{ secrets.GITHUB_CLIENT_ID }}" >> .env
          echo "GITHUB_CLIENT_SECRET=${{ secrets.GITHUB_CLIENT_SECRET }}" >> .env

      - name: 🔐 파일 권한 변경
        run: chmod 644 springboot-app.tar .env

      - name: 🛠 EC2 폴더 권한 설정
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo chown -R $USER:$USER /home/${{ secrets.EC2_USER }}/app
            sudo chmod -R 755 /home/${{ secrets.EC2_USER }}/app

      - name: 📡 EC2에 파일 전송

      - name: 🐳 EC2에 Docker 설치 + 앱 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "🐳 Docker 설치 여부 확인"
            if ! command -v docker &> /dev/null; then
              echo "👉 Docker 설치 중..."
              sudo apt update -y
              sudo apt install docker.io -y
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER
            fi
            
            echo "📁 앱 디렉토리 이동"
            cd /home/${{ secrets.EC2_USER }}/app
            
            echo "🧹 이전 컨테이너 정리"
            docker stop app || true
            docker rm app || true
            docker rmi springboot-app || true
            
            echo "🚀 컨테이너 실행"
            docker run -d --name app \
              --env-file .env \
              -p 8080:8080 \
              springboot-app
